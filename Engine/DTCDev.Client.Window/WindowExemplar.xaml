<UserControl x:Class="DTCDev.Client.Window.WindowExemplar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" Loaded="UserControl_Loaded">
    <UserControl.Resources>

        <Style x:Key="btnMinimizeStyle" TargetType="Button">
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Background_Copy" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF686868" BorderBrush="#FF00CCFF" Opacity="0"/>
                            <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF212121">
                                <Grid Margin="1">
                                    <Border x:Name="BackgroundAnimation" Opacity="0"/>
                                    <Rectangle x:Name="BackgroundGradient"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <!--<Popup x:Name="popupRoot">-->
    <Grid x:Name="LayoutRoot">
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--<ThicknessAnimation:ThicknessWrapper x:Name="rectTopMargin" Target="{Binding ElementName=spTitle}" Side="Top" PropertyName="Margin"></ThicknessAnimation:ThicknessWrapper>-->

        <Border x:Name="brdrRoot" Background="Black" Opacity="0.5" Grid.RowSpan="2" Cursor="Hand" MouseLeftButtonDown="Border_MouseLeftButtonDown">
        </Border>
        <TextBlock x:Name="txtblTitle" Width="Auto" HorizontalAlignment="Left" VerticalAlignment="Center"   Margin="10,4" Foreground="White" MouseLeftButtonDown="Border_MouseLeftButtonDown" Cursor="Hand" FontWeight="Bold">Title</TextBlock>
        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <Button x:Name="btnMinimize" Height="16" Width="20"  Click="btnMinimize_Click" Style="{StaticResource btnMinimizeStyle}" >
                <Grid>
                    <Border VerticalAlignment="Bottom" Height="2" Background="Black" Margin="0,0,0,-5" HorizontalAlignment="Right" Width="10"/>
                    <Border Background="#FF00CCFF" Margin="0,0,1,-4" HorizontalAlignment="Right" Width="10" Height="2" VerticalAlignment="Bottom"/>

                </Grid>
            </Button>
            <Button x:Name="btnMaximize" Width="20" Height="16" Click="btnMaximize_Click" Style="{StaticResource btnMinimizeStyle}"  >
                <Grid>
                    <Border Height="8" BorderThickness="2" BorderBrush="Black" Margin="-5,1,-7,-1" d:LayoutOverrides="HorizontalAlignment, VerticalAlignment"/>
                    <Border Height="8" BorderThickness="2" BorderBrush="#FF00CCFF" Margin="-6,0" d:LayoutOverrides="HorizontalAlignment, VerticalAlignment"/>

                </Grid>
            </Button>
            <Button x:Name="btnClose" Height="16" Width="20" Margin="0,0,5,0" Click="btnClose_Click" Style="{StaticResource btnMinimizeStyle}" Foreground="White">
                <Grid>
                    <Border Width="2" Height="10" BorderBrush="#FF00CCFF" Background="#FF00CCFF" RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="45"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>

                    </Border>
                    <Border Width="2" Height="10" BorderBrush="#FF00CCFF" Background="#FF00CCFF" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" d:LayoutRounding="Auto">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="-45"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Border.RenderTransform>

                    </Border>
                </Grid>
            </Button>
        </StackPanel>
        <!--<Border Grid.Row="1"  Margin="5" Background="White" BorderBrush="#FF4D4D4D">
        </Border>-->

        <!-- Borders-->
        <Border Grid.Row="1" Margin="3"/>
        <Border x:Name="brdrStretchRight" Grid.Row="1" Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch" Margin="0,0,0,5" Cursor="SizeWE" MouseLeftButtonDown="brdrStretchRight_MouseLeftButtonDown" Background="White" Opacity="0">
        </Border>
        <Border x:Name="brdrStretchBottom" Grid.Row="1" Height="5" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Margin="0,0,5,0" Cursor="SizeNS" MouseLeftButtonDown="brdrStretchBottom_MouseLeftButtonDown" Background="White" Opacity="0"/>
        <Border x:Name="brdrStretchBR" Grid.Row="1" Height="5" Width="5" VerticalAlignment="Bottom"  HorizontalAlignment="Right" Margin="0,0,0,0" Cursor="SizeNWSE" MouseLeftButtonDown="brdrStretchBR_MouseLeftButtonDown" Background="White" Opacity="0"/>

        <!-- Content -->
        <Grid x:Name="grdContent" Margin="6,1,6,6" Grid.Row="1" >

        </Grid>
    </Grid>
    <!--</Popup>-->
</UserControl>
