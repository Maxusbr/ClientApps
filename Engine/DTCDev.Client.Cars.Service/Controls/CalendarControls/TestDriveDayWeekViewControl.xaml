<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ViewModels="clr-namespace:DTCDev.Client.Cars.Service.Engine.Controls.ViewModels;assembly=DTCDev.Client.Cars.Service.Engine" 
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:convertors="clr-namespace:DTCDev.Client.Cars.Service.Convertors"
             x:Class="DTCDev.Client.Cars.Service.Controls.CalendarControls.TestDriveDayWeekViewControl" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="1000">
    <UserControl.Resources>
        <Style x:Key="DataGridCellSelectedStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource Blue1}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridCellClearStyle" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <convertors:BoolToStyleConverter x:Key="BoolToStyleConverter" TrueValue="{StaticResource Blue1}" FalseValue="Transparent" DesibleValue="{StaticResource LightGray2}" />
        <Style x:Key="StyleCell" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" >
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource BoolToStyleConverter}" >
                        <Binding RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="." />
                    </MultiBinding>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Custom:ButtonHelper.CornerRadius" Value="3"/>
            <Setter Property="Background" Value="{DynamicResource GrayBrush10}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
            <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="5,6"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border x:Name="Background" Background="{TemplateBinding Background}" CornerRadius="{Binding (Custom:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}" CornerRadius="{Binding (Custom:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Border x:Name="DisabledVisualElement" Background="{DynamicResource ControlsDisabledBrush}" CornerRadius="{Binding (Custom:ButtonHelper.CornerRadius), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <ContentControl x:Name="contentControl" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush2}"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource GrayBrush5}"/>
                                <Setter Property="Foreground" TargetName="contentControl" Value="{DynamicResource LightGray1}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush8}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush3}"/>
                            </MultiTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Background" Value="{DynamicResource GrayBrush7}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ButtonMouseOverBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.7"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>
    <UserControl.DataContext>
        <ViewModels:TestDriveDayWeekViewModel/>
    </UserControl.DataContext>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Margin="20,20,20,10">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Запись на тест-драйв" VerticalAlignment="Top" Margin="0,0,0,15"/>
            <Grid VerticalAlignment="Bottom" Grid.Row="1" HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ToggleButton x:Name="ToggleButton" Content="{Binding ToggleButtonName}" Margin="0,0,20,0" Style="{DynamicResource ToggleButtonStyle}" Width="50" 
                              IsChecked="{Binding WeekStyle, Mode=TwoWay}"/>
                <Image x:Name="imgLeft" Source="/DTCDev.Client.Cars.Service;component/Assets/Images/left.png" Cursor="Hand" Width="24" Height="24" Grid.Column="1" MouseLeftButtonDown="imgLeft_MouseLeftButtonDown"/>
                <TextBlock x:Name="txtDate" Grid.Column="2" FontSize="18" VerticalAlignment="Center" Margin="20,0" Text="{Binding Period}" MinWidth="50" />
                <Image x:Name="imgRight" Source="/DTCDev.Client.Cars.Service;component/Assets/Images/right.png" Cursor="Hand" Width="24" Height="24" Grid.Column="3" MouseLeftButtonDown="imgRight_MouseLeftButtonDown"/>

            </Grid>

        </Grid>

        <DataGrid x:Name="PostList" AutoGenerateColumns="False" ItemsSource="{Binding ListCarTest}" Grid.Row="1" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserSortColumns="False" SelectionUnit="Cell" SelectionMode="Single" Margin="20,0" CanUserDeleteRows="False" CanUserResizeRows="False" GridLinesVisibility="All" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Автомобили" Binding="{Binding Post.Name}" ClipboardContentBinding="{x:Null}"/>
                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="8:00" CellStyle="{DynamicResource StyleCell}" />
                <DataGridTemplateColumn ClipboardContentBinding="{x:Null}" Header="8:30" CellStyle="{DynamicResource StyleCell}" />
            </DataGrid.Columns>
        </DataGrid>
        <Grid x:Name="gDetail" Grid.Column="1" Margin="20,0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock x:Name="tbCar" Text="" Margin="0,5,0,20"/>

            <Grid x:Name="ccDetail" Grid.Row="1" />

        </Grid>

    </Grid>
</UserControl>
