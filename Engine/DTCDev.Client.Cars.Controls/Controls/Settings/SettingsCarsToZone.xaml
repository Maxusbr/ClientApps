<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
            xmlns:models="clr-namespace:DTCDev.Client.Cars.Controls.Models"
            xmlns:vm="clr-namespace:DTCDev.Client.Cars.Controls.ViewModels.Map"
            xmlns:Map="clr-namespace:DTCDev.Client.Controls.Map;assembly=DTCDev.Client.Controls.Map"
            xmlns:map="clr-namespace:DTCDev.Client.Cars.Controls.Controls.Map"
            x:Class="DTCDev.Client.Cars.Controls.Controls.Settings.SettingsCarsToZone" 
             mc:Ignorable="d" 
             d:DesignWidth="727">
    <UserControl.DataContext>
        <vm:CarZoneMapViewModel />
    </UserControl.DataContext>
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <models:BoolToColorConverter x:Key="BoolToColorConverter"/>
        <DataTemplate x:Key="CarsItemTemplate">
            <Grid>
                <Border BorderBrush="DarkRed" BorderThickness="1" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" Background="DarkRed"/>
                <TextBlock Height="Auto" TextWrapping="Wrap" Text="{Binding Car.CarNumber}" VerticalAlignment="Center" Padding="5,0" Margin="1" Background="#D8FFFFFF"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="PointItemStyle" TargetType="{x:Type Map:MapItem}">
            <Setter Property="Map:MapPanel.Location" Value="{Binding Location}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Canvas>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selectiongroup">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="canvas">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFCDCDCD"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="selectiongroup">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvas">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFD8D8D8"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="selectiongroup">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvas">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Canvas x:Name="selectiongroup" Canvas.Left="-43" Canvas.Top="-41" Opacity="0.5" Height="86" Width="88" Visibility="Hidden">
                                <Path Fill="#7F272727" Opacity="1" Margin="0" Height="Auto" Canvas.Left="43" Canvas.Top="41">
                                    <Path.Data>
                                        <EllipseGeometry RadiusX="55" RadiusY="55"/>
                                    </Path.Data>
                                </Path>
                                <Grid Opacity="0.2" Width="80" Margin="0" Height="1" Canvas.Left="3" Canvas.Top="40">
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="52,0,0,0"/>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="0,0,52,0"/>
                                </Grid>
                                <Grid RenderTransformOrigin="0.5,0.5" Opacity="0.2" Width="80" Margin="0" Height="1" Canvas.Left="3" Canvas.Top="40">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-60"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="52,0,0,0"/>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="0,0,52,0"/>
                                </Grid>
                                <Grid RenderTransformOrigin="0.5,0.5" Opacity="0.2" Width="80" Margin="0" Height="1" Canvas.Left="3" Canvas.Top="40">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="60"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="52,0,0,0"/>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="0,0,52,0"/>
                                </Grid>
                            </Canvas>
                            <Path x:Name="path" StrokeThickness="2" Fill="Transparent" Stroke="{Binding InZone, Converter={StaticResource BoolToColorConverter}}">
                                <Path.Data>
                                    <EllipseGeometry RadiusX="8" RadiusY="8"/>
                                </Path.Data>
                            </Path>
                            <Canvas x:Name="canvas" Height="101" Canvas.Left="-50" Canvas.Top="-50" Width="100" Opacity="0.5" Visibility="Hidden">
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" Margin="0" Height="Auto" Canvas.Left="28">
                                    <Rectangle x:Name="labelBackground" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding Name}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Canvas.Top="30" HorizontalAlignment="Left">
                                    <Rectangle x:Name="labelBackground1" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding strSpeed}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Canvas.Left="57" Canvas.Top="30">
                                    <Rectangle x:Name="labelBackground2" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding strLocation}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" Margin="0" Height="Auto" Canvas.Left="28" Canvas.Top="82">
                                    <Rectangle x:Name="labelBackground3" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding InZone}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Canvas.Top="53">
                                    <Rectangle x:Name="labelBackground4" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding Name}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Canvas.Left="57" Canvas.Top="53" Width="Auto">
                                    <Rectangle x:Name="labelBackground5" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding Name}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                            </Canvas>
                            <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{Binding Adress}" Canvas.Left="-50" VerticalAlignment="Center" Canvas.Top="50" Width="100" TextAlignment="Center" Visibility="Hidden"/>
                            <map:MapViewElement Canvas.Left="-60" Canvas.Top="-60"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="MovedElementItemStyle" TargetType="{x:Type Map:MapItem}">
            <Setter Property="Map:MapPanel.Location" Value="{Binding Current, Mode=TwoWay}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Map:MovedCanvas Width="18" Height="18" Margin="-8,-8,0,0" >
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="_base">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="_base">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF0BC3AA"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="_base">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF0BC3AA"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="_base" Data="M0.5,0.5 L4.2734375,0.5 5.5332031,1.7597656 2.6503906,1.7597656 4.8883314,3.9977064 5.0215576,3.9122968 C5.6263454,3.5448186 6.3363116,3.3332033 7.0957031,3.3332033 8.0622015,3.3332033 8.9486388,3.6759853 9.6400745,4.2466087 L9.6735837,4.275635 12.189453,1.7597656 9.3066406,1.7597656 10.566406,0.5 14.339844,0.5 14.339844,4.2734375 13.080078,5.5273438 13.080078,2.6445313 10.49844,5.230715 10.51661,5.2590578 C10.884088,5.8638456 11.095703,6.5738118 11.095703,7.3332033 11.095703,8.0925949 10.884088,8.802561 10.51661,9.4073489 L10.4312,9.540575 13.080078,12.189453 13.080078,9.3066406 14.339844,10.566406 14.339844,14.333984 10.566406,14.333984 9.3066406,13.080078 12.189453,13.080078 9.5805461,10.466578 9.4889669,10.538545 C8.8215964,11.037641 7.9931659,11.333203 7.0957031,11.333203 6.3363116,11.333203 5.6263454,11.121588 5.0215576,10.75411 L4.991504,10.734843 2.6503906,13.080078 5.5332031,13.080078 4.2734375,14.333984 0.5,14.333984 0.5,10.566406 1.7597656,9.3066406 1.7597656,12.189453 4.039995,9.9132311 4.0091085,9.8775747 C3.4384851,9.186139 3.0957031,8.2997017 3.0957031,7.3332033 3.0957031,6.4357405 3.3912652,5.6073101 3.8903613,4.9399395 L3.9628856,4.8476512 1.7597656,2.6445313 1.7597656,5.5273438 0.5,4.2734375 z" 
								Fill="#BF0BC3AA" Height="17" Stretch="Fill" Stroke="#FF2E2E2E" StrokeThickness="0.5" Width="17" 
								Opacity="0.5" Visibility="{Binding EnableEdit, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <TextBlock TextWrapping="Wrap" Text="{Binding Current}" Margin="-30,-13,0,0" FontSize="9"/>
                        </Map:MovedCanvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <DataTemplate x:Key="PolylineItemTemplate">
            <Grid Height="1" Width="1">
                <Map:MapPolyline Locations="{Binding Locations}" Stroke="#FFEE4B0E" StrokeThickness="3" IsClosed="True" Fill="#4CD85010" IsEnabled="{Binding EnableEdit}"/>
                <Map:MapItemsControl ItemsSource="{Binding MovedLocations}" 
					ItemContainerStyle="{DynamicResource MovedElementItemStyle}" 
					Visibility="{Binding EnableEdit, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="ZonesItemStyle" TargetType="{x:Type Map:MapItem}">
            <!-- <Setter Property="Map:MapPanel.Location" Value="{Binding Current, Mode=TwoWay}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Map:MovedCanvas>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" Opacity="0.5" IsEnabled="{Binding EnableEdit}"/>
                        </Map:MovedCanvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <DataTemplate x:Key="ZoneDataTemplate">
        	<Grid>
        		<Border BorderBrush="DarkRed" BorderThickness="1" Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}" Background="DarkRed"/>
        		<TextBlock Text="{Binding Name}" VerticalAlignment="Center" Padding="5,0" Margin="1" Background="#D8FFFFFF"/>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="170"/>
        </Grid.ColumnDefinitions>
        <Grid Background="#FFE5E5E5" Margin="10" Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Vertical" Grid.Row="1" Margin="0,10,0,0">
                <TextBlock TextWrapping="Wrap" Text="Зоны:" FontSize="18" HorizontalAlignment="Center" Height="24" Margin="0"/>

                <ListBox Height="200" ItemsSource="{Binding Zones}" SelectedItem="{Binding SelectedZone, Mode=TwoWay}" ItemTemplate="{DynamicResource ZoneDataTemplate}"/>
                <TextBlock TextWrapping="Wrap" Text="Автомобили:" FontSize="18" HorizontalAlignment="Center" Height="24" Margin="0"/>
                <ListBox Height="200" ItemsSource="{Binding Cars}" SelectedItem="{Binding SelectedCar, Mode=TwoWay}" ItemTemplate="{DynamicResource CarsItemTemplate}"/>
                <Button Content="Привязать" VerticalAlignment="Top" Margin="10,15,10,5" IsEnabled="{Binding IsCarZoneCanLink}">
                    <i:Interaction.Behaviors>
                        <models:EventToCommandBehavior Command="{Binding LinkCarToZoneCommand}" Event="Click" PassArguments="True"/>
                    </i:Interaction.Behaviors>
                </Button>
                <Button Content="Отвязать" VerticalAlignment="Top" Margin="10,2,10,5"  IsEnabled="{Binding IsCarZoneCanUnLink}">
                    <i:Interaction.Behaviors>
                        <models:EventToCommandBehavior Command="{Binding UnLinCarToZoneCommand}" Event="Click" PassArguments="True"/>
                    </i:Interaction.Behaviors>
                </Button>
                <Button Content="Сохранить" VerticalAlignment="Top" Margin="10,2,10,15" IsEnabled="{Binding IsEnabledSaveBtn}">
                    <i:Interaction.Behaviors>
                        <models:EventToCommandBehavior Command="{Binding SaveCommand}" Event="Click" PassArguments="True"/>
                    </i:Interaction.Behaviors>
                </Button>
            </StackPanel>
        </Grid>
        <Map:Map x:Name="map" TargetZoomLevel="11" Margin="10" TargetCenter="{Binding MapCenterUser, Mode=TwoWay}" Center="{Binding MapCenter}">
            <Map:MapItemsControl ItemsSource="{Binding Zones}" 
				ItemTemplate="{StaticResource PolylineItemTemplate}" 
				SelectedItem="{Binding SelectedZone}"
				ItemContainerStyle="{StaticResource ZonesItemStyle}" Focusable="False" 
				IsSynchronizedWithCurrentItem="False"/>
            <Map:MapItemsControl ItemsSource="{Binding Cars}" 
				ItemContainerStyle="{StaticResource PointItemStyle}" 
				SelectedItem="{Binding SelectedCar}"/>
        </Map:Map>

    </Grid>
</UserControl>
