<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:VM="clr-namespace:DTCDev.Client.Cars.Controls.ViewModels.Map"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:Model="clr-namespace:DTCDev.Client.Cars.Controls.Models"
             xmlns:Map="clr-namespace:DTCDev.Client.Controls.Map;assembly=DTCDev.Client.Controls.Map"
             xmlns:local="clr-namespace:DTCDev.Client.Cars.Controls.Controls.Map" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="DTCDev.Client.Cars.Controls.Controls.Map.MapView"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="600">
    <UserControl.Resources>

        <Model:BoolToColorConverter x:Key="BoolToColorConverter"/>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Style x:Key="PointItemStyle" TargetType="{x:Type Map:MapItem}">
            <Setter Property="Map:MapPanel.Location" Value="{Binding Navigation.LocationPoint}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Canvas  Visibility="{Binding Navigation.VisOnMap}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <local:MapViewElement Canvas.Left="-60" Canvas.Top="-60" Visibility="{Binding Navigation.VisOnMap}" IsSelected="{Binding IsSelected}"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<EventSetter Event="UIElement.TouchDown" Handler="MapItemTouchDown"/>-->
        </Style>
        
        <Style x:Key="TextListObjectStyle" TargetType="{x:Type ListViewItem}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ListViewItem}">
        				<Grid>
        					<TextBlock TextWrapping="Wrap" Text="{Binding Name}" VerticalAlignment="Top"/>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="FocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        	<Setter Property="SnapsToDevicePixels" Value="True"/>
        	<Setter Property="Padding" Value="4,1"/>
        	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="BorderBrush" Value="Transparent"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ListBoxItem}">
        				<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
        					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding Name}"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="IsMouseOver" Value="True"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
        						<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
        					</MultiTrigger>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="Selector.IsSelectionActive" Value="False"/>
        							<Condition Property="IsSelected" Value="True"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
        						<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
        					</MultiTrigger>
        					<MultiTrigger>
        						<MultiTrigger.Conditions>
        							<Condition Property="Selector.IsSelectionActive" Value="True"/>
        							<Condition Property="IsSelected" Value="True"/>
        						</MultiTrigger.Conditions>
        						<Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
        						<Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
        					</MultiTrigger>
        					<Trigger Property="IsEnabled" Value="False">
        						<Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="MovedElementItemStyle" TargetType="{x:Type Map:MapItem}">
        	<Setter Property="Map:MapPanel.Location" Value="{Binding Current, Mode=TwoWay}"/>
        	<Setter Property="HorizontalAlignment" Value="Left"/>
        	<Setter Property="VerticalAlignment" Value="Bottom"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Map:MapItem}">
        				<Map:MovedCanvas Width="18" Height="18" Margin="-8,-8,0,0" >
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="Disabled"/>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="_base">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="SelectionStates">
        							<VisualState x:Name="Unselected"/>
        							<VisualState x:Name="Selected">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="_base">
        										<EasingColorKeyFrame KeyTime="0" Value="#FF0BC3AA"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="SelectedUnfocused">
        								<Storyboard>
        									<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="_base">
        										<EasingColorKeyFrame KeyTime="0" Value="#FF0BC3AA"/>
        									</ColorAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Path x:Name="_base" Data="M0.5,0.5 L4.2734375,0.5 5.5332031,1.7597656 2.6503906,1.7597656 4.8883314,3.9977064 5.0215576,3.9122968 C5.6263454,3.5448186 6.3363116,3.3332033 7.0957031,3.3332033 8.0622015,3.3332033 8.9486388,3.6759853 9.6400745,4.2466087 L9.6735837,4.275635 12.189453,1.7597656 9.3066406,1.7597656 10.566406,0.5 14.339844,0.5 14.339844,4.2734375 13.080078,5.5273438 13.080078,2.6445313 10.49844,5.230715 10.51661,5.2590578 C10.884088,5.8638456 11.095703,6.5738118 11.095703,7.3332033 11.095703,8.0925949 10.884088,8.802561 10.51661,9.4073489 L10.4312,9.540575 13.080078,12.189453 13.080078,9.3066406 14.339844,10.566406 14.339844,14.333984 10.566406,14.333984 9.3066406,13.080078 12.189453,13.080078 9.5805461,10.466578 9.4889669,10.538545 C8.8215964,11.037641 7.9931659,11.333203 7.0957031,11.333203 6.3363116,11.333203 5.6263454,11.121588 5.0215576,10.75411 L4.991504,10.734843 2.6503906,13.080078 5.5332031,13.080078 4.2734375,14.333984 0.5,14.333984 0.5,10.566406 1.7597656,9.3066406 1.7597656,12.189453 4.039995,9.9132311 4.0091085,9.8775747 C3.4384851,9.186139 3.0957031,8.2997017 3.0957031,7.3332033 3.0957031,6.4357405 3.3912652,5.6073101 3.8903613,4.9399395 L3.9628856,4.8476512 1.7597656,2.6445313 1.7597656,5.5273438 0.5,4.2734375 z" Fill="#BF0BC3AA" Height="17" Stretch="Fill" Stroke="#FF2E2E2E" StrokeThickness="0.5" Width="17" Opacity="0.5"/>
        					<TextBlock TextWrapping="Wrap" Text="{Binding Current}" Margin="-30,-13,0,0" FontSize="9"/>
        				</Map:MovedCanvas>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	<EventSetter Event="UIElement.TouchDown" Handler="MapItemTouchDown"/>
        </Style>
        <Style x:Key="ZonesItemStyle" TargetType="{x:Type Map:MapItem}">
            <!-- <Setter Property="Map:MapPanel.Location" Value="{Binding Current, Mode=TwoWay}"/>-->
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Map:MapItem}">
        				<Map:MovedCanvas>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="SelectionStates">
        							<VisualState x:Name="Unselected"/>
        							<VisualState x:Name="Selected">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="SelectedUnfocused">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<ContentPresenter x:Name="contentPresenter" Opacity="0.5" IsEnabled="{Binding EnableEdit}"/>
        				</Map:MovedCanvas>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>

        </Style>
        <DataTemplate x:Key="ZoneOperateElement">
        	<Map:MovedCanvas Margin="-8,-8,0,0">
        		<Path Map:MapPanel.Location="{Binding Current}" x:Name="_base" Data="M0.5,0.5 L4.2734375,0.5 5.5332031,1.7597656 2.6503906,1.7597656 4.8883314,3.9977064 5.0215576,3.9122968 C5.6263454,3.5448186 6.3363116,3.3332033 7.0957031,3.3332033 8.0622015,3.3332033 8.9486388,3.6759853 9.6400745,4.2466087 L9.6735837,4.275635 12.189453,1.7597656 9.3066406,1.7597656 10.566406,0.5 14.339844,0.5 14.339844,4.2734375 13.080078,5.5273438 13.080078,2.6445313 10.49844,5.230715 10.51661,5.2590578 C10.884088,5.8638456 11.095703,6.5738118 11.095703,7.3332033 11.095703,8.0925949 10.884088,8.802561 10.51661,9.4073489 L10.4312,9.540575 13.080078,12.189453 13.080078,9.3066406 14.339844,10.566406 14.339844,14.333984 10.566406,14.333984 9.3066406,13.080078 12.189453,13.080078 9.5805461,10.466578 9.4889669,10.538545 C8.8215964,11.037641 7.9931659,11.333203 7.0957031,11.333203 6.3363116,11.333203 5.6263454,11.121588 5.0215576,10.75411 L4.991504,10.734843 2.6503906,13.080078 5.5332031,13.080078 4.2734375,14.333984 0.5,14.333984 0.5,10.566406 1.7597656,9.3066406 1.7597656,12.189453 4.039995,9.9132311 4.0091085,9.8775747 C3.4384851,9.186139 3.0957031,8.2997017 3.0957031,7.3332033 3.0957031,6.4357405 3.3912652,5.6073101 3.8903613,4.9399395 L3.9628856,4.8476512 1.7597656,2.6445313 1.7597656,5.5273438 0.5,4.2734375 z" Fill="#BF0BC3AA" Height="17" Stretch="Fill" Stroke="#FF2E2E2E" StrokeThickness="0.5" Width="17" Opacity="0.5"/>
        		<TextBlock TextWrapping="Wrap" Text="{Binding Current}" Margin="0,-13,0,0" FontSize="9"/>
        	</Map:MovedCanvas>
        </DataTemplate>
        <DataTemplate x:Key="PolylineItemTemplate">
        	<Grid Height="1" Width="1">
        		<Map:MapPolyline Locations="{Binding Locations}" Stroke="#FFEE4B0E" StrokeThickness="3" IsClosed="True" Fill="#4CD85010" IsEnabled="{Binding EnableEdit}"/>
        		<!--<Map:MapItemsControl ItemsSource="{Binding MovedLocations}" 
        			ItemContainerStyle="{DynamicResource MovedElementItemStyle}" 
        			Visibility="{Binding EnableEdit, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
        	</Grid>

        </DataTemplate>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="MovedButtonStyle" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        										<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
        										<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
        									</DoubleAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled"/>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity="0.5"/>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsDefaulted" Value="true">
        						<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
        						<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <DataTemplate x:Key="ZonesItemTemplate">
        	<Grid>
        		<TextBox HorizontalAlignment="Stretch" Height="Auto" TextWrapping="Wrap" Text="{Binding Name, Mode=TwoWay}" VerticalAlignment="Top" Padding="5,0"/>
        	</Grid>
        </DataTemplate>

    </UserControl.Resources>
    <!--<UserControl.DataContext>
        <VM:MapViewModel />
    </UserControl.DataContext>-->
	<Grid Background="White">
		<Grid.ColumnDefinitions>
			<ColumnDefinition/>
			<ColumnDefinition Width="0"/>
		</Grid.ColumnDefinitions>

		<Map:Map x:Name="map" TargetZoomLevel="11" Margin="10" TargetCenter="{Binding MapCenterUser, Mode=TwoWay}" Center="{Binding MapCenter}">
			<!--<i:Interaction.Behaviors>
				<Model:EventToCommandBehavior Command="{Binding LeftMouseButtonClickCommand}" Event="MouseLeftButtonUp" PassArguments="True"/>
			</i:Interaction.Behaviors>-->
			<Map:MapItemsControl ItemsSource="{Binding ZoneSelect}" 
				ItemTemplate="{StaticResource PolylineItemTemplate}" 
				
				ItemContainerStyle="{StaticResource ZonesItemStyle}" Focusable="False" 
				IsSynchronizedWithCurrentItem="False" IsEnabled="False" Visibility="Collapsed"/>
			<Map:MapItemsControl ItemsSource="{Binding Points}" 
				ItemContainerStyle="{StaticResource PointItemStyle}" 
				SelectedItem="{Binding SelectedCar}"/>
			<TextBlock TextWrapping="Wrap" Text="{Binding CurrentLocation}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10" Visibility="Collapsed"/>
			<TextBlock TextWrapping="Wrap" Text="&#xE1D9;" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,10,0,0" FontFamily="Segoe UI Symbol" Visibility="Collapsed"/>
			<!--<TextBlock TextWrapping="Wrap" Text="{Binding EnableEditZone, Mode=TwoWay}" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="35,0,-25.757,0" FontFamily="Segoe UI Symbol" Visibility="Collapsed"/>-->
		</Map:Map>
		<Button Content="{Binding NameShowButton}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="150" Margin="0,36,10,0" Visibility="Collapsed">
			<i:Interaction.Behaviors>
				<Model:EventToCommandBehavior Command="{Binding ShowListZoneCommand}" Event="Click" PassArguments="True"/>
			</i:Interaction.Behaviors>
		</Button>
		<Viewbox HorizontalAlignment="Right" Height="180" VerticalAlignment="Top" Width="150" Margin="0,58,10,0" 
			Stretch="None" Visibility="Collapsed" >
			<Canvas Height="180" Width="150" ClipToBounds="True">
                <ListBox SelectedItem="{Binding SelectedZone}"
					ItemsSource="{Binding Zones}" Height="150" Width="150" Canvas.Top="{Binding PosLB}">
					<i:Interaction.Behaviors>
						<ei:FluidMoveBehavior>
							<ei:FluidMoveBehavior.EaseY>
								<BackEase EasingMode="EaseOut" Amplitude="0.3"/>
							</ei:FluidMoveBehavior.EaseY>
						</ei:FluidMoveBehavior>
					</i:Interaction.Behaviors>
				</ListBox>
			</Canvas>
		</Viewbox>
        <Button Content="{Binding NameLogButton}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="150" Margin="0,10,10,10" Visibility="Collapsed">
            <i:Interaction.Behaviors>
                <Model:EventToCommandBehavior Command="{Binding ShowLogCommand}" Event="Click" PassArguments="True"/>
            </i:Interaction.Behaviors>
        </Button>
    </Grid>
</UserControl>
