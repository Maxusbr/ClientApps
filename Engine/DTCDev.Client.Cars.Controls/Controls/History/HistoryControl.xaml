<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DTCDev.Client.Cars.Controls.Controls.History"
             xmlns:convertor="clr-namespace:DTCDev.Client.Cars.Controls.Controls"
             xmlns:Map="clr-namespace:DTCDev.Client.Controls.Map;assembly=DTCDev.Client.Controls.Map" 
             xmlns:History="clr-namespace:DTCDev.Client.Cars.Controls.ViewModels.History" 
             xmlns:Map1="clr-namespace:DTCDev.Client.Cars.Controls.Controls.Map" 
             xmlns:Car="clr-namespace:DTCDev.Client.Cars.Controls.Controls.Car" 
             xmlns:Models="clr-namespace:DTCDev.Client.Cars.Controls.Models" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             x:Class="DTCDev.Client.Cars.Controls.Controls.History.HistoryControl"
             mc:Ignorable="d" 
             d:DesignHeight="580" d:DesignWidth="900" Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <Models:BoolToColorConverter x:Key="BoolToColorConverter"/>
        <Models:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Storyboard x:Key="stbShowDate" x:Name="stbShowDate">
            <DoubleAnimation Storyboard.TargetName="grdSelectDate" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
        </Storyboard>
        <Storyboard x:Key="stbHideDate" x:Name="stbHideDate">
            <DoubleAnimation Storyboard.TargetName="grdSelectDate" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5"/>
        </Storyboard>
        <Storyboard x:Key="stbShowDetails" Storyboard.TargetName="grdService" Storyboard.TargetProperty="(Grid.Width)">
            <DoubleAnimation From="0" To="450" Duration="0:0:0.5"/>
        </Storyboard>
        <Storyboard x:Key="stbHideDetails" Storyboard.TargetName="grdService" Storyboard.TargetProperty="(Grid.Width)">
            <DoubleAnimation From="450" To="0" Duration="0:0:0.5"/>
        </Storyboard>
        <Style TargetType="{x:Type Button}" x:Key="feBtnStyle">
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00.15" To="MouseOver"/>
                                        <VisualTransition GeneratedDuration="00:00:00.15" To="Pressed"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard/>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard/>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard/>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard/>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <convertor:IntToDateTimeConverter x:Key="timeConverter"/>
        <convertor:SpeedConverter x:Key="speedConverter"/>
        <Style x:Key="RouteItem" TargetType="{x:Type Map:MapItem}">
            <Setter Property="Map:MapPanel.Location" Value="{Binding ''}"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#1F26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#A826A0DA"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#3DDADADA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#3D26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="PolylineItemTemplate">
            <Grid Height="1" Width="1">
                <Map:MapPolyline Locations="{Binding Locations}" Stroke="#FFEE4B0E" StrokeThickness="3" IsClosed="True" Fill="#4CD85010" IsEnabled="{Binding EnableEdit}"/>
                <!--<Map:MapItemsControl ItemsSource="{Binding MovedLocations}" 
        			ItemContainerStyle="{DynamicResource MovedElementItemStyle}" 
        			Visibility="{Binding EnableEdit, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
            </Grid>

        </DataTemplate>
        <Style x:Key="ZonesItemStyle" TargetType="{x:Type Map:MapItem}">
            <!-- <Setter Property="Map:MapPanel.Location" Value="{Binding Current, Mode=TwoWay}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Map:MovedCanvas>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" Opacity="0.5" IsEnabled="{Binding EnableEdit}"/>
                        </Map:MovedCanvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="btnMinimizeStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Background_Copy" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF686868" BorderBrush="#FF00CCFF" Opacity="0"/>
                            <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF212121">
                                <Grid Margin="1">
                                    <Border x:Name="BackgroundAnimation" Opacity="0"/>
                                    <Rectangle x:Name="BackgroundGradient"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ParkingItemStyle" TargetType="{x:Type Map:MapItem}">
            <Setter Property="Map:MapPanel.Location" Value="{Binding Position}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Grid Margin="-10,-10,0,0">
                            <Rectangle Fill="#FF061B40" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="20" RadiusX="4" RadiusY="4"/>
                            <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="P" VerticalAlignment="Center" Foreground="White" FontSize="21.333" FontWeight="Bold" Margin="0,-5,0,0"/>
                            <Grid.ToolTip>
                                <local:ParkingToolTipView />
                            </Grid.ToolTip>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PointItemStyle" TargetType="{x:Type Map:MapItem}">
            <Setter Property="Map:MapPanel.Location" Value="{Binding Location}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Canvas  Visibility="{Binding VisOnMap}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFCDCDCD"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="selectiongroup">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvas">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="White"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="path">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FFD8D8D8"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="selectiongroup">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="canvas">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Canvas x:Name="selectiongroup" Canvas.Left="-43" Canvas.Top="-41" Opacity="0" Height="86" Width="88" Visibility="Hidden">
                                <Path Fill="#7F272727" Opacity="1" Margin="0" Height="Auto" Canvas.Left="43" Canvas.Top="41">
                                    <Path.Data>
                                        <EllipseGeometry RadiusX="55" RadiusY="55"/>
                                    </Path.Data>
                                </Path>
                                <Grid Opacity="0.2" Width="80" Margin="0" Height="1" Canvas.Left="3" Canvas.Top="40">
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="52,0,0,0"/>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="0,0,52,0"/>
                                </Grid>
                                <Grid RenderTransformOrigin="0.5,0.5" Opacity="0.2" Width="80" Margin="0" Height="1" Canvas.Left="3" Canvas.Top="40">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-60"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="52,0,0,0"/>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="0,0,52,0"/>
                                </Grid>
                                <Grid RenderTransformOrigin="0.5,0.5" Opacity="0.2" Width="80" Margin="0" Height="1" Canvas.Left="3" Canvas.Top="40">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="60"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="52,0,0,0"/>
                                    <Path Data="M10,0L37,0" Fill="{x:Null}" Height="Auto" Stretch="Fill" Stroke="White" Margin="0,0,52,0"/>
                                </Grid>
                            </Canvas>
                            <Path x:Name="path" StrokeThickness="2" Fill="Transparent" Stroke="{Binding InZone, Converter={StaticResource BoolToColorConverter}}" Visibility="Collapsed">
                                <Path.Data>
                                    <EllipseGeometry RadiusX="8" RadiusY="8"/>
                                </Path.Data>
                            </Path>
                            <Canvas x:Name="canvas" Height="101" Canvas.Left="-50" Canvas.Top="-50" Width="100" Opacity="0" Visibility="Hidden">
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" Margin="0" Height="Auto" Canvas.Left="28">
                                    <Rectangle x:Name="labelBackground" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding Name}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Canvas.Top="30" HorizontalAlignment="Left">
                                    <Rectangle x:Name="labelBackground1" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding strSpeed}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Canvas.Left="57" Canvas.Top="30">
                                    <Rectangle x:Name="labelBackground2" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding strLocation}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Stretch" Margin="0" Height="Auto" Canvas.Left="28" Canvas.Top="82">
                                    <Rectangle x:Name="labelBackground3" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding InZone}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Canvas.Top="53">
                                    <Rectangle x:Name="labelBackground4" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding Name}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                                <Grid Opacity="1" RenderTransformOrigin="0.5,0.5" Height="Auto" Canvas.Left="57" Canvas.Top="53" Width="Auto">
                                    <Rectangle x:Name="labelBackground5" Fill="{x:Null}" Opacity="0.7"/>
                                    <TextBlock Margin="2,0,2,0" Text="{Binding Name}" FontSize="10.667" TextTrimming="CharacterEllipsis" Width="40" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center"/>
                                </Grid>
                            </Canvas>
                            <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{Binding Adress}" Canvas.Left="-50" VerticalAlignment="Center" Canvas.Top="50" Width="100" TextAlignment="Center" Visibility="Hidden"/>
                            <Map1:MapViewElement Canvas.Left="-60" Canvas.Top="-60" Visibility="{Binding VisOnMap}"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<EventSetter Event="UIElement.TouchDown" Handler="MapItemTouchDown"/>-->
        </Style>
    </UserControl.Resources>

    <UserControl.DataContext>
        <History:HistoryViewModel/>
    </UserControl.DataContext>

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="26"/>
            <RowDefinition Height="344*" />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.ColumnSpan="5" Visibility="Collapsed">
            <TextBlock Text="Даты запроса:" Margin="5"/>
            <Button Content="{Binding SelectedDateText}" Margin="5,0" Width="100" VerticalAlignment="Center" Command="{Binding SelectedDateCommand}"/>
            <ToggleButton IsChecked="{Binding UseAccelleration, Mode=TwoWay}" HorizontalAlignment="Left" Content="Оптимизация" VerticalAlignment="Center" Margin="5,0" Width="100"/>
            <ToggleButton x:Name="checkBox" IsChecked="{Binding TablePackageView, Mode=TwoWay}" HorizontalAlignment="Left" Content="Таблица" VerticalAlignment="Center" Margin="5,0" Width="70"/>
            <TextBlock FontWeight="Bold" HorizontalAlignment="Right" Margin="0,6,10,6" Text="{Binding SelectedDevice}"/>
            <ToggleButton Content="Все дни" VerticalAlignment="Center" Margin="0,3,10,3" IsChecked="{Binding PeriodSet}" HorizontalAlignment="Right" Width="70"/>
            <ToggleButton Content="Детально" HorizontalAlignment="Right" Margin="0,3,10,3" VerticalAlignment="Center" Click="ToggleButton_Click"/>
        </StackPanel>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.ColumnSpan="5"/>

        <TextBlock FontWeight="Bold" HorizontalAlignment="Right" Text="{Binding MapCenter, Mode=OneWay}" Visibility="Collapsed" Margin="0,0,82,0" Grid.Column="2"/>

        <!-- MAP -->
        <Map:Map x:Name="Map" Center="{Binding MapCenter}" ZoomLevel="{Binding Path=ZoomLevel, Mode=TwoWay}"
                 TargetCenter="{Binding MapCenterUser, Mode=TwoWay}" Grid.ColumnSpan="{Binding SpanMap}" Grid.RowSpan="2">
            <Map:MapItemsControl ItemsSource="{Binding ZoneSelect}" 
				ItemTemplate="{StaticResource PolylineItemTemplate}" 
				ItemContainerStyle="{StaticResource ZonesItemStyle}" Focusable="False" 
				IsSynchronizedWithCurrentItem="False" IsEnabled="False"/>
            <Map:MapItemsControl x:Name="CarPoints" ItemsSource="{Binding Points}" 
				ItemContainerStyle="{StaticResource PointItemStyle}" 
				SelectedItem="{Binding Position}"/>
            <Map:MapColorLine x:Name="RouteLine" Locations="{Binding Route}" StrokeThickness="3" Stroke="DarkGreen" IsClosed="False" Visibility="Collapsed" />
            <Map:MapColorLine x:Name="WarningLine" Locations="{Binding WarningRoute}" StrokeThickness="3" Stroke="DarkOrange" IsClosed="False" Visibility="Collapsed" />
            <Map:MapColorLine x:Name="ErrorLine" Locations="{Binding ErrorRoute}" StrokeThickness="3" Stroke="DarkRed" IsClosed="False" Visibility="Collapsed" />
            <Map:MapColorLine x:Name="OfflineLine" Locations="{Binding OfflineRoute}" StrokeThickness="3" Stroke="Gray" IsClosed="False" Visibility="Collapsed" />
            <Map:MapItemsControl x:Name="ParkingsPin" ItemsSource="{Binding Parkings}"  Focusable="True"  IsSynchronizedWithCurrentItem="False" 
                                 IsEnabled="True" ItemContainerStyle="{DynamicResource ParkingItemStyle}" Visibility="Collapsed" 
                                 />
            <Map:Pushpin x:Name="CarPin" Map:MapPanel.Location="{Binding Position.Location}" Background="{x:Null}" Visibility="Collapsed" >
                <Map1:MapViewElement DataContext="{Binding Position}" Margin="-62,0,0,-77" Visibility="{Binding VisOnMap}"/>
            </Map:Pushpin>
            <Map:MapScale/>
        </Map:Map>
        <Grid Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" Height="220">
            <Border Width="32" Height="210" Background="White" HorizontalAlignment="Left" Margin="6,10" Opacity="0.8"/>
            <Slider x:Name="sldrZoom" Grid.Row="1" SmallChange="1" VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" RenderTransformOrigin="0.5,0.5" Margin="-78,100,0,0" Maximum="18" Minimum="1" Value="{Binding Path=ZoomLevel, Mode=TwoWay}">
                <Slider.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Slider.RenderTransform>
            </Slider>
        </Grid>

        <Border x:Name="brdrStat" Margin="0,2,2,0" CornerRadius="2" BorderThickness="1" BorderBrush="LightGray" Background="White" VerticalAlignment="Top" HorizontalAlignment="Right" Width="300" Grid.RowSpan="2" Visibility="Collapsed">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="55"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="88"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <TextBlock Margin="5" Text="Начало"/>
                <TextBlock Margin="0,5" Grid.Column="1" Text="{Binding StartTime}"/>

                <TextBlock Margin="5" Text="Оконч." Grid.Row="1"/>
                <TextBlock Margin="0,5" Grid.Column="1" Grid.Row="1" Text="{Binding StopTime}"/>

                <TextBlock Grid.Column="2" Margin="0,5" Text="V (ср/мaкс)"/>
                <StackPanel Grid.Column="3"  Orientation="Horizontal">
                    <TextBlock Text="{Binding RoundedSpeed}" MinWidth="10" Margin="0,5"/>
                    <TextBlock Text="/" Margin="5"/>
                    <Button Content="{Binding MaxSpeed}" MinWidth="10" Command="{Binding ShowMaxSpeedCommad}" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"/>
                </StackPanel>

                <TextBlock Grid.Column="2" Grid.Row="1" Text="Км (день/общ)" Margin="0,5"/>
                <StackPanel Grid.Column="3" Grid.Row="1"  Orientation="Horizontal">
                    <TextBlock Text="{Binding Distance}" Margin="0,5"/>
                    <TextBlock Text="/" Margin="5"/>
                    <TextBlock Text="{Binding DistanceAll}" Margin="0,5"/>
                </StackPanel>
            </Grid>
        </Border>

        <Button x:Name="btnMinimize" Click="btnMinimize_Click" Height="16" Width="20" Style="{StaticResource btnMinimizeStyle}" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="0,2,2,0" Grid.RowSpan="2" Visibility="Collapsed">
            <Grid>
                <Border VerticalAlignment="Bottom" Height="2" Background="Black" Margin="0,0,0,-5" HorizontalAlignment="Right" Width="10"/>
                <Border Background="#FF00CCFF" Margin="0,0,1,-4" HorizontalAlignment="Right" Width="10" Height="2" VerticalAlignment="Bottom"/>

            </Grid>
        </Button>





        <Grid Grid.Row="2" Visibility="Collapsed" Grid.ColumnSpan="3" Margin="0,0,0,52">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="216" />
                <ColumnDefinition Width="284*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>


            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Row="1">
                <RadioButton x:Name="rbtnGraphic" Content="Графический вид" Margin="6" IsChecked="True" Checked="rbtnGraphic_Checked"/>
                <RadioButton x:Name="rbtnList" Content="Таблица" Margin="6" Checked="rbtnList_Checked"/>
            </StackPanel>
        </Grid>

        <Grid x:Name="grdService" Grid.Row="1" Grid.Column="2" Margin="0,30,0,0" Width="230" Visibility="Collapsed" >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!-- display time line-->

            <Border BorderThickness="1" Background="White" Margin="0,-30,0,0" Opacity="0.8" Grid.RowSpan="3"/>
            <StackPanel Orientation="Horizontal" Height="30" VerticalAlignment="Top" Margin="20,0,0,0">
                <Image Margin="3" Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/Calendar-icon.png" ToolTipService.ToolTip="Отображаемая дата"/>
                <Button Margin="13,3,3,3" Command="{Binding MoveBackwardCommand}" Style="{StaticResource feBtnStyle}">
                    <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/Left-icon.png" Cursor="Hand" />
                </Button>
                <Button Content="{Binding SelectedDateText}" Margin="5,0" Width="100" VerticalAlignment="Center" Command="{Binding SelectedDateCommand}"/>
                <!--<TextBlock Margin="10,6" Text="{Binding DisplayedHistoryDate, StringFormat=dd.MM.yyyy}"/>-->
                <Button Margin="3" Style="{StaticResource feBtnStyle}" Command="{Binding MoveForwardCommand}">
                    <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/Right-icon.png" Cursor="Hand" />
                </Button>

                <TextBlock Text="Текущее время: " Margin="6"/>
                <TextBlock Text="{Binding CurrentSecondSelected, Converter={StaticResource timeConverter}}" Margin="6" />
            </StackPanel>
            <!-- display time line-->

            <Grid x:Name="grdGrapic" Margin="20,0,0,0" Grid.Row="1" Visibility="Collapsed" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="28*" />
                </Grid.RowDefinitions>
                <Image Margin="3" HorizontalAlignment="Left" Grid.Row="1" Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/Time-icon.png" Width="24" ToolTipService.ToolTip="Отображаемое время"/>

                <Grid Grid.Row="1" Margin="40,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="grdMove">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/Left-icon.png" Cursor="Hand" Margin="5,0" >
                            <i:Interaction.Behaviors>
                                <Models:EventToCommandBehavior Event="MouseLeftButtonDown" Command="{Binding MoveTimeBackwardCommand}"/>
                                <Models:EventToCommandBehavior Event="MouseLeftButtonUp" Command="{Binding MoveTimeBackwardUpCommand}"/>
                            </i:Interaction.Behaviors>
                        </Image>
                        <Button  Style="{StaticResource feBtnStyle}" Visibility="Collapsed"/>
                        <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/Right-icon.png" Cursor="Hand" Margin="5,0" Grid.Column="2" >
                            <i:Interaction.Behaviors>
                                <Models:EventToCommandBehavior Event="MouseLeftButtonDown" Command="{Binding MoveTimeForwardCommand}"/>
                                <Models:EventToCommandBehavior Event="MouseLeftButtonUp" Command="{Binding MoveTimeForwardUpCommand}"/>
                            </i:Interaction.Behaviors>
                        </Image>
                        <Button Grid.Column="2" Style="{StaticResource feBtnStyle}" Visibility="Collapsed"/>
                        <Slider Grid.Column="1" Minimum="0" Maximum="86400" Value="{Binding CurrentSecondSelected, Mode=TwoWay}"/>
                    </Grid>
                    <Grid Grid.Row="1" Margin="30,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="20"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="00"/>
                        <TextBlock Text="06" Grid.Column="2"/>
                        <TextBlock Text="12" Grid.Column="4"/>
                        <TextBlock Text="18" Grid.Column="6"/>
                        <TextBlock Text="24" Grid.Column="8"/>
                    </Grid>
                    <Image HorizontalAlignment="Right" Grid.Row="1" Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/player.png" MouseLeftButtonUp="Image_MouseLeftButtonUp_2" Cursor="Hand"/>
                    <Grid Grid.RowSpan="2" Margin="30,20,30,0" x:Name="grdPlayer" Background="White" Visibility="Collapsed" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Button Style="{StaticResource feBtnStyle}" Grid.Column="1" Command="{Binding Plr_FastMinezeCommand}">
                            <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/player/arrow-left-fast.png" Cursor="Hand" />
                        </Button>
                        <Button Style="{StaticResource feBtnStyle}" Grid.Column="2" Command="{Binding Plr_MinezeCommand}">
                            <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/player/arrow-left.png" Cursor="Hand" />
                        </Button>


                        <Button Style="{StaticResource feBtnStyle}" Grid.Column="3" Command="{Binding Plr_RunCommand}">
                            <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/player/play.png" Cursor="Hand" />
                        </Button>
                        <Button Style="{StaticResource feBtnStyle}" Grid.Column="3" Command="{Binding Plr_StopCommand}" Visibility="{Binding BtnStopPlayVisibility}">
                            <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/player/pause.png" Cursor="Hand" />
                        </Button>

                        <Button Style="{StaticResource feBtnStyle}" Grid.Column="4" Command="{Binding Plr_PlusCommand}">
                            <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/player/arrow-right.png" Cursor="Hand" />
                        </Button>
                        <Button Style="{StaticResource feBtnStyle}" Grid.Column="5" Command="{Binding Plr_FastPlusCommand}">
                            <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/player/arrow-right-fast.png" Cursor="Hand" />
                        </Button>

                        <Slider Grid.Column="6" Margin="2" Maximum="50" Value="{Binding Accelleration, Mode=TwoWay}"/>
                        <TextBlock Text="{Binding Accelleration, StringFormat=Уск \{0\}X}" Grid.Column="7" VerticalAlignment="Center"/>
                    </Grid>
                </Grid>
                <ScrollViewer Grid.Row="2" Grid.RowSpan="3" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="200"/>
                        </Grid.RowDefinitions>
                        <Image Margin="3,3,0,6" Width="24" HorizontalAlignment="Left"  Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/car-add-icon.png" ToolTipService.ToolTip="Автомобиль в движении"/>
                        <Image Margin="3,3,0,6" Width="24" HorizontalAlignment="Left" Grid.Row="1" Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/satellite-dish-icon.png" ToolTipService.ToolTip="Количество спутников"/>
                        <local:History_OnWay Data="{Binding DayStates}" Margin="57,0,30,0" />
                        <TextBlock Margin="40,0" HorizontalAlignment="Left" Height="23" MinWidth="10" VerticalAlignment="Center" Text="{Binding SelectedState.Spd, Converter={StaticResource speedConverter}}"/>
                        <local:History_SatCount Grid.Row="1"  Height="30" Margin="57,0,30,0" x:Name="history_SatCount1" Data="{Binding DayStates}"/>
                        <TextBlock Grid.Row="1" Margin="40,0" HorizontalAlignment="Left" Height="23" MinWidth="10" VerticalAlignment="Center" Text="{Binding SelectedState.Sat}"/>

                        <local:LinesHistoryPresenter Grid.Row="2" Data="{Binding Lines}"/>

                        <local:OBDDataPresenter Grid.Row="3" Data="{Binding OBDHistory}"/>

                        <local:AccDataPresenter Grid.Row="4" Data="{Binding AccHistory}"/>
                    </Grid>
                </ScrollViewer>
            </Grid>

            <Grid x:Name="grdList" Margin="20,0,0,0" Grid.Row="1" Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Image Margin="3" Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/Calendar-icon.png" ToolTipService.ToolTip="Отображаемая дата"/>
                    <Button Margin="30,3,3,3" Command="{Binding MoveBackwardCommand}" Style="{StaticResource feBtnStyle}">
                        <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/Left-icon.png" Cursor="Hand" />
                    </Button>
                    <TextBlock Margin="10,6" Text="{Binding DisplayedHistoryDate, StringFormat=dd.MM.yyyy}"/>
                    <Button Margin="3" Style="{StaticResource feBtnStyle}" Command="{Binding MoveForwardCommand}">
                        <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/Right-icon.png" Cursor="Hand" />
                    </Button>

                    <TextBlock Text="Текущее время: " Margin="6"/>
                    <TextBlock Text="{Binding CurrentSecondSelected, Converter={StaticResource timeConverter}}" Margin="6" />
                </StackPanel>
                <DataGrid Grid.Row="1" AutoGenerateColumns="False" ItemsSource="{Binding DayStates}" Margin="4" SelectedItem="{Binding SelectedState, Mode=TwoWay}">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="Дата">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <local:StateDatePresenter DisplayState="{Binding}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Состояние" Width="*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <!--<my:CarViewElement DisplayState="{Binding}" />-->
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
            <local:PackagesView Data="{Binding Lines}" Track="{Binding DayStates}" Visibility="{Binding IsChecked, Converter={StaticResource BoolToVisibilityConverter}, ElementName=checkBox}" Margin="20,0,0,0" Grid.Row="1" />
            <Grid x:Name="grdSelectDate"  Visibility="{Binding VisSelectDate}" VerticalAlignment="Top" >
                <Border Background="White" Opacity="0.8"/>
                <Calendar x:Name="calendar1" SelectedDatesChanged="Calendar_SelectedDatesChanged_1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,30,15,30"/>
            </Grid>
            <ToggleButton x:Name="tgbDetail" Content="Детально" HorizontalAlignment="Center" VerticalAlignment="Bottom" Click="ToggleButton_Click" Padding="5,1" Grid.Row="2" Margin="0,5"/>
        </Grid>

        <Car:CarZonesError x:Name="_carZonesError" VerticalAlignment="Top" Grid.Row="2" DataContext="{Binding HistoryErrorVm}" Grid.ColumnSpan="3" Visibility="Collapsed"/>

        <Grid Grid.Row="1" Grid.RowSpan="2" Visibility="{Binding VisLoad}" Grid.ColumnSpan="3" d:IsHidden="True">
            <Border Background="White" Opacity="0.5"/>
            <TextBlock Margin="6" Text="{Binding LoadingText}" FontSize="24" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
        </Grid>
        <ToggleButton Content="История" VerticalAlignment="Top" Click="HistoryButton_Click" Padding="5,1" HorizontalAlignment="Center" Width="180" Grid.Row="1" Margin="0,10,0,0" Grid.ColumnSpan="2" Grid.Column="1"/>
    </Grid>
</UserControl>
