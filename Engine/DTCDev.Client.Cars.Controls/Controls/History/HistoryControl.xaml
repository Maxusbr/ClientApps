<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DTCDev.Client.Cars.Controls.Controls.History"
             xmlns:convertor="clr-namespace:DTCDev.Client.Cars.Controls.Controls"
             xmlns:Map="clr-namespace:DTCDev.Client.Controls.Map;assembly=DTCDev.Client.Controls.Map" 
             xmlns:History="clr-namespace:DTCDev.Client.Cars.Controls.ViewModels.History" 
             xmlns:Map1="clr-namespace:DTCDev.Client.Cars.Controls.Controls.Map" 
             xmlns:Car="clr-namespace:DTCDev.Client.Cars.Controls.Controls.Car" 
             xmlns:Models="clr-namespace:DTCDev.Client.Cars.Controls.Models" 
             xmlns:Client="clr-namespace:DTCDev.Client;assembly=DTCDev.Client"
             xmlns:busy="clr-namespace:DTCDev.Client.Busy;assembly=DTCDev.Client"
             x:Class="DTCDev.Client.Cars.Controls.Controls.History.HistoryControl"
             mc:Ignorable="d" 
             d:DesignHeight="580" d:DesignWidth="900" Loaded="UserControl_Loaded">

    <UserControl.Resources>
        <Models:InvertBoolToVisibilityConverter x:Key="InvertBoolToVisibilityConverter"/>
        <Models:BoolToColorConverter x:Key="BoolToColorConverter"/>
        <Models:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <Storyboard x:Key="stbShowDate" x:Name="stbShowDate">
            <DoubleAnimation Storyboard.TargetName="grdSelectDate" Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.5"/>
        </Storyboard>
        <Storyboard x:Key="stbHideDate" x:Name="stbHideDate">
            <DoubleAnimation Storyboard.TargetName="grdSelectDate" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.5"/>
        </Storyboard>
        <Storyboard x:Key="stbShowDetails" Storyboard.TargetName="grdService" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <DoubleAnimation From="0" To="450" Duration="0:0:0.5"/>
        </Storyboard>
        <Storyboard x:Key="stbHideDetails" Storyboard.TargetName="grdService" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <DoubleAnimation From="450" To="0" Duration="0:0:0.5"/>
        </Storyboard>
        <Storyboard x:Key="stbOpenToolBar" Storyboard.TargetName="grdToolbar" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <DoubleAnimation From="40" To="180" Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Key="stbCloseToolBar" Storyboard.TargetName="grdToolbar" Storyboard.TargetProperty="(FrameworkElement.Width)">
            <DoubleAnimation From="180" To="40" Duration="0:0:0.2"/>
        </Storyboard>
        <Storyboard x:Key="stbDisplayWorkHistory" Storyboard.TargetName="grdHistoryWork" Storyboard.TargetProperty="(UIElement.Opacity)">
            <DoubleAnimation From="0.3" To="1" Duration="0:0:0.1"/>
        </Storyboard>
        <Storyboard x:Key="stbHideWorkHistory" Storyboard.TargetName="grdHistoryWork" Storyboard.TargetProperty="(UIElement.Opacity)">
            <DoubleAnimation From="1" To="0.3" Duration="0:0:0.1"/>
        </Storyboard>
        <Style TargetType="{x:Type Button}" x:Key="feBtnStyle">
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00.15" To="MouseOver"/>
                                        <VisualTransition GeneratedDuration="00:00:00.15" To="Pressed"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard/>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard/>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard/>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard/>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <convertor:IntToDateTimeConverter x:Key="timeConverter"/>
        <convertor:SpeedConverter x:Key="speedConverter"/>
        <Style x:Key="RouteItem" TargetType="{x:Type Map:MapItem}">
            <Setter Property="Map:MapPanel.Location" Value="{Binding ''}"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#1F26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#A826A0DA"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#3DDADADA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#3D26A0DA"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="PolylineItemTemplate">
            <Grid Height="1" Width="1">
                <Map:MapPolyline Locations="{Binding Locations}" Stroke="#FFEE4B0E" StrokeThickness="3" IsClosed="True" Fill="#4CD85010" IsEnabled="{Binding EnableEdit}"/>
                <!--<Map:MapItemsControl ItemsSource="{Binding MovedLocations}" 
        			ItemContainerStyle="{DynamicResource MovedElementItemStyle}" 
        			Visibility="{Binding EnableEdit, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
            </Grid>

        </DataTemplate>
        <Style x:Key="ZonesItemStyle" TargetType="{x:Type Map:MapItem}">
            <!-- <Setter Property="Map:MapPanel.Location" Value="{Binding Current, Mode=TwoWay}"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Map:MovedCanvas>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" Opacity="0.5" IsEnabled="{Binding EnableEdit}"/>
                        </Map:MovedCanvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="btnMinimizeStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FF1F3B53"/>
            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Background_Copy">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundAnimation"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="Background_Copy" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF686868" BorderBrush="#FF00CCFF" Opacity="0"/>
                            <Border x:Name="Background" BorderThickness="{TemplateBinding BorderThickness}" Background="#FF212121">
                                <Grid Margin="1">
                                    <Border x:Name="BackgroundAnimation" Opacity="0"/>
                                    <Rectangle x:Name="BackgroundGradient"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Rectangle x:Name="DisabledVisualElement" Fill="#FFFFFFFF" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ParkingItemStyle" TargetType="{x:Type Map:MapItem}">
            <Setter Property="Map:MapPanel.Location" Value="{Binding Position}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Grid Margin="-10,-10,0,0">
                            <Grid.ToolTip>
                                <local:ParkingToolTipView />
                            </Grid.ToolTip>
                            <Rectangle Fill="#FF061B40" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top" Width="20" RadiusX="4" RadiusY="4"/>
                            <TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="P" VerticalAlignment="Center" Foreground="White" FontSize="21.333" FontWeight="Bold" Margin="0,-5,0,0"/>
                        </Grid>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PointItemStyle" TargetType="{x:Type Map:MapItem}">
            <Setter Property="Map:MapPanel.Location" Value="{Binding Location}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Map:MapItem}">
                        <Canvas  Visibility="{Binding VisOnMap}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled"/>
                                    <VisualState x:Name="MouseOver"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected"/>
                                    <VisualState x:Name="SelectedUnfocused"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Map1:MapViewElement Canvas.Left="-60" Canvas.Top="-60" Visibility="{Binding VisOnMap}" IsSelected="{Binding IsSelected}"/>
                        </Canvas>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<EventSetter Event="UIElement.TouchDown" Handler="MapItemTouchDown"/>-->
        </Style>
    </UserControl.Resources>

    <UserControl.DataContext>
        <History:HistoryViewModel/>
    </UserControl.DataContext>

    <Grid x:Name="LayoutRoot" Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="0"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Visibility="Collapsed" Margin="0,0,0,580" Grid.RowSpan="2" Width="0">
            <TextBlock Text="Даты запроса:" Margin="5"/>
            <Button Content="{Binding SelectedDateText}" Margin="5,0" Width="100" VerticalAlignment="Center" Command="{Binding SelectedDateCommand}"/>
            <ToggleButton IsChecked="{Binding UseAccelleration, Mode=TwoWay}" HorizontalAlignment="Left" Content="Оптимизация" VerticalAlignment="Center" Margin="5,0" Width="100"/>
            <ToggleButton x:Name="checkBox" IsChecked="{Binding TablePackageView, Mode=TwoWay}" HorizontalAlignment="Left" Content="Таблица" VerticalAlignment="Center" Margin="5,0" Width="70"/>
            <TextBlock FontWeight="Bold" HorizontalAlignment="Right" Margin="0,6,10,6" Text="{Binding SelectedDevice}"/>
            <ToggleButton Content="Все дни" VerticalAlignment="Center" Margin="0,3,10,3" IsChecked="{Binding PeriodSet}" HorizontalAlignment="Right" Width="70"/>
        </StackPanel>

        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="2" Margin="0,0,0,580" Grid.RowSpan="2" Width="0" Grid.ColumnSpan="2"/>

        <TextBlock FontWeight="Bold" HorizontalAlignment="Right" Text="{Binding MapCenter, Mode=OneWay}" Visibility="Collapsed" Margin="0,0,82,580" Grid.RowSpan="2" Width="0" Grid.Column="1"/>

        <!-- MAP -->
        <Map:Map x:Name="Map" Center="{Binding MapCenter}" ZoomLevel="{Binding ZoomLevel, Mode=TwoWay}"
			TargetCenter="{Binding MapCenterUser, Mode=TwoWay}" Grid.RowSpan="2" Grid.ColumnSpan="2">
            <Map:MapItemsControl ItemsSource="{Binding ZoneSelect}" 
				ItemTemplate="{StaticResource PolylineItemTemplate}" 
				ItemContainerStyle="{StaticResource ZonesItemStyle}" Focusable="False" 
				IsSynchronizedWithCurrentItem="False" IsEnabled="False"/>
            <Map:MapItemsControl x:Name="CarPoints" ItemsSource="{Binding Points}" 
				ItemContainerStyle="{StaticResource PointItemStyle}" 
				SelectedItem="{Binding Position, Mode=TwoWay}"/>
            <Map:MapColorLine x:Name="RouteLine" Locations="{Binding Route}" StrokeThickness="3" Stroke="DarkGreen" IsClosed="False" Visibility="Collapsed" />
            <Map:MapColorLine x:Name="WarningLine" Locations="{Binding WarningRoute}" StrokeThickness="3" Stroke="DarkOrange" IsClosed="False" Visibility="Collapsed" />
            <Map:MapColorLine x:Name="ErrorLine" Locations="{Binding ErrorRoute}" StrokeThickness="3" Stroke="DarkRed" IsClosed="False" Visibility="Collapsed" />
            <Map:MapColorLine x:Name="OfflineLine" Locations="{Binding OfflineRoute}" StrokeThickness="3" Stroke="Gray" IsClosed="False" Visibility="Collapsed" />
            <Map:MapItemsControl x:Name="ParkingsPin" ItemsSource="{Binding Parkings}"  Focusable="True"  IsSynchronizedWithCurrentItem="False" 
				IsEnabled="True" ItemContainerStyle="{DynamicResource ParkingItemStyle}" Visibility="Collapsed" 
                                 />
            <Map:Pushpin x:Name="CarPin" Map:MapPanel.Location="{Binding Position.Location}" Background="{x:Null}" Visibility="Collapsed" >
                <Map1:MapViewElement DataContext="{Binding Position}" Margin="-62,0,0,-77" Visibility="{Binding VisOnMap}"/>
            </Map:Pushpin>
            <Map:MapScale/>
        </Map:Map>
        <Grid Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" Height="220">
            <Border Width="32" Height="210" Background="White" HorizontalAlignment="Left" Margin="6,10" Opacity="0.8"/>
            <Slider x:Name="sldrZoom" Grid.Row="1" SmallChange="1" VerticalAlignment="Top" HorizontalAlignment="Left" Width="200" RenderTransformOrigin="0.5,0.5" Margin="-78,100,0,0" Maximum="18" Minimum="1" Value="{Binding ZoomLevel, Mode=TwoWay}">
                <Slider.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Slider.RenderTransform>
            </Slider>
        </Grid>





        <Grid x:Name="grdHistoryWork" Grid.Row="1" Background="White" Grid.Column="1" Opacity="0.3">
            <Grid.Triggers>
                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource stbDisplayWorkHistory}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource stbHideWorkHistory}"/>
                </EventTrigger>
            </Grid.Triggers>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="{Binding LoadedText}" Margin="10,10,10,0" VerticalAlignment="Top"/>
                <DataGrid Margin="10,7,70,40" ItemsSource="{Binding HistoryRows}" AutoGenerateColumns="False" SelectedItem="{Binding SelectedHistoryRow, Mode=TwoWay}" CanUserAddRows="False" Grid.Row="2">
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding StringDate}" Header="Дата" Width="*" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Mileage}" Header="Пробег" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding MiddleSpeed}" Header="Ср. скорость" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Start}" Header="Начало" IsReadOnly="True"/>
                        <DataGridTextColumn Binding="{Binding Stop}" Header="Окончание" IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
                <TextBlock Text="{Binding DistanceAll}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,19,20" Grid.Row="2"/>
                <Button Content="Загрузить еще 10 дней" Command="{Binding LoadNext10Command}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10,0,0,10" Grid.Row="2"/>
                <Grid Margin="0,7,10,40" Width="40" HorizontalAlignment="Right" x:Name="grdToolbar" Background="LightGray" Grid.Row="2">
                    <Grid.Triggers>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard Storyboard="{StaticResource stbOpenToolBar}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard Storyboard="{StaticResource stbCloseToolBar}"/>
                        </EventTrigger>
                    </Grid.Triggers>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Button Command="{Binding ClickDistanceCommand}" x:Name="btnDistance" Width="34" Height="34" Grid.Column="1" Click="btnDistance_Click" >
                        <Image Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/way.png"/>
                    </Button>
                    <TextBlock TextWrapping="Wrap" FontStyle="Italic" Margin="5" Text="Пробег автомобиля за несколько дней"/>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid x:Name="grdDistance" Height="60" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border Background="LightGray" Margin="2" BorderThickness="1" BorderBrush="Gray" Grid.RowSpan="2" Grid.ColumnSpan="3"/>
                        <TextBlock Text="{Binding CDStartDay}" Grid.Column="1" Margin="7"/>
                        <TextBlock Text="{Binding CDStopDay}" Grid.Column="1" Grid.Row="1" Margin="7"/>
                        <Path Visibility="{Binding VisCDStart}" Fill="Green" Data="M0,0 10,5 0,10" Margin="10"/>
                        <Path Visibility="{Binding VisCDStop}" Fill="Green" Data="M0,0 10,5 0,10" Margin="10" Grid.Row="1"/>
                        <TextBlock Text="{Binding TotalDistance, StringFormat=Всего \{0\} км}" Grid.Column="2" Grid.RowSpan="2" FontSize="14" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </Grid>
                </Grid>

            </Grid>
            
            <ScrollViewer Grid.Row="2"  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="32"/>
                        <RowDefinition Height="32"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="200"/>
                    </Grid.RowDefinitions>
                    <Image Margin="3,3,0,6" Width="24" HorizontalAlignment="Left"  Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/car-add-icon.png" ToolTipService.ToolTip="Автомобиль в движении"/>
                    <Image Margin="3,3,0,6" Width="24" HorizontalAlignment="Left" Grid.Row="1" Source="/DTCDev.Client.Cars.Controls;component/Assets/Content/Images/satellite-dish-icon.png" ToolTipService.ToolTip="Количество спутников"/>
                    <local:History_OnWay Data="{Binding DayStates}" Margin="57,0,30,0" />
                    <TextBlock Margin="40,0" HorizontalAlignment="Left" Height="23" MinWidth="10" VerticalAlignment="Center" Text="{Binding SelectedState.Spd, Converter={StaticResource speedConverter}}"/>
                    <local:History_SatCount Visibility="Collapsed" Grid.Row="1"  Height="30" Margin="57,0,30,0" x:Name="history_SatCount1" Data="{Binding DayStates}"/>
                    <TextBlock Grid.Row="1" Margin="40,0" HorizontalAlignment="Left" Height="23" MinWidth="10" VerticalAlignment="Center" Text="{Binding SelectedState.Sat}"/>

                    <local:LinesHistoryPresenter Grid.Row="2" Data="{Binding Lines}"/>

                    <local:OBDDataPresenter Grid.Row="3" Data="{Binding OBDHistory}"/>

                    <local:AccDataPresenter Grid.Row="4" Data="{Binding AccHistory}"/>
                </Grid>
            </ScrollViewer>
            <local:PlayerControl Grid.Row="1" HorizontalAlignment="Center" 
                                 IsPlayed="{Binding IsPlayerStart, Mode=TwoWay}" 
                                 StartTime="{Binding PlayerStartTime, Mode=TwoWay}" 
                                 EndTime="{Binding PlayerEndTime, Mode=TwoWay}" 
                                 CurentTime="{Binding PlayerCurentTime, Mode=TwoWay}" />
        </Grid>

        <Car:CarZonesError x:Name="_carZonesError" VerticalAlignment="Top" Grid.Row="2" DataContext="{Binding HistoryErrorVm}" Visibility="Collapsed" Height="0" Grid.ColumnSpan="2"/>
        <Border Grid.RowSpan="2" Margin="50,10,0,0" Padding="10" HorizontalAlignment="Left" VerticalAlignment="Top" Background="White" Visibility="{Binding EnableHistory, Converter={StaticResource BoolToVisibilityConverter}}" >
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal" >
                    <RadioButton Content="Скорость" Margin="0,0,10,0" IsChecked="{Binding IsCheckedSpeed, Mode=TwoWay}"/>
                    <RadioButton Content="Дорога" Margin="0,0,10,0" IsChecked="{Binding IsCheckedWay, Mode=TwoWay}" IsEnabled="{Binding IsEnabledRadio}"/>
                    <RadioButton Content="Ускорение" IsChecked="{Binding IsCheckedAccelerate, Mode=TwoWay}" IsEnabled="{Binding IsEnabledRadio}"/>
                </StackPanel>
                <Client:MultiSlider x:Name="MultiValueSlider" Height="40" Left="{Binding LeftValue, Mode=TwoWay}" Right="{Binding RightValue, Mode=TwoWay}" 
                                    FirstDecoration="Green" SecondDecoration="Gold" ThirdDecoration="Red" Margin="0,10,0,0" 
                                    Max="{Binding MaxValue, Mode=TwoWay}" Min="{Binding MinValue, Mode=TwoWay}" IsEnabled="{Binding IsEnabledRadio}"
                                    Visibility="{Binding IsCheckedSpeed, Converter={StaticResource InvertBoolToVisibilityConverter}}" />
            </StackPanel>
        </Border>
        <busy:MacBusyControl IsWaiting="{Binding Iswaiting}" Grid.RowSpan="2" Grid.ColumnSpan="2" d:IsHidden="True" />
    </Grid>
</UserControl>
