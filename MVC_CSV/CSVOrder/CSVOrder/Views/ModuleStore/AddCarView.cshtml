@using CSVOrder.Models.Abstract
@model CSVOrder.Models.Service.CarViewModel
@{
    Layout = null;
}
<strong>Автомобиль:</strong>
@{if (string.IsNullOrEmpty(Model.Number))
{
    foreach (var property in ViewData.ModelMetadata.Properties.OrderBy(p => p.Order))
    {
        switch (property.PropertyName)
        {
            case "Marks":
            case "Models":
            case "BodyTypes":
            case "EngineTypes":
            case "EngineVolumes":
            case "TransTypes":
                var list = property.Model as List<KVPBase>;
                if (list == null) { break; }
                <div class="form-group">
                    <strong>@property.DisplayName: </strong>
                    @Html.DropDownList(property.PropertyName, list.Select(o => new SelectListItem { Text = o.Name, Value = o.id.ToString() }), new { @class = "form-control" })
                </div>
                break;
            case "VIN":
            case "Number":
            <div class="form-group">
                <strong>@property.DisplayName: </strong>
                @Html.TextBox(property.PropertyName, property.Model, new { @class = "form-control" })
            </div>
                break;
            default:
            @Html.Hidden(property.PropertyName, property.Model)
                break;
        }
    }
}
else
{
    var prop = ViewData.ModelMetadata.Properties.FirstOrDefault(o => o.PropertyName.Equals("Number"));
    if (prop != null)
    {
        <div class="form-group">
            @prop.DisplayName: <strong>@prop.Model</strong>
        </div>
    }
}
}